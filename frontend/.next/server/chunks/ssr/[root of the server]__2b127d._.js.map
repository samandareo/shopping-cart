{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/poppins_c65b5ee2.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"poppins_c65b5ee2-module__NqQ9kW__className\",\n  \"variable\": \"poppins_c65b5ee2-module__NqQ9kW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/poppins_c65b5ee2.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Poppins%22,%22arguments%22:[{%22variable%22:%22--font-poppins%22,%22weight%22:[%22400%22,%22500%22,%22600%22,%22700%22],%22subsets%22:[%22latin%22]}],%22variableName%22:%22poppins%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Poppins', 'Poppins Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sreo4K/Desktop/mid-app-dev/frontend/src/contexts/CartContext.tsx"],"sourcesContent":["// src/contexts/CartContext.tsx\r\n\r\nimport { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface CartContextProps {\r\n  cartOpen: boolean;\r\n  toggleCart: () => void;\r\n  products: any[];\r\n  fetchProducts: () => Promise<void>;\r\n  loading: boolean;\r\n}\r\n\r\nconst CartContext = createContext<CartContextProps | undefined>(undefined);\r\n\r\nexport const CartProvider = ({ children }: { children: ReactNode }) => {\r\n  const [cartOpen, setCartOpen] = useState(false);\r\n  const [products, setProducts] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const toggleCart = () => setCartOpen(!cartOpen);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/products');\r\n      const data = await response.json();\r\n      setProducts(data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch products:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartOpen, toggleCart, products, fetchProducts, loading }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for accessing the CartContext\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;;AAE/B;;;AAUA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAEzD,MAAM,eAAe,CAAC,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,aAAa,IAAM,YAAY,CAAC;IAEtC,MAAM,gBAAgB;QACpB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,YAAY;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAU;YAAY;YAAU;YAAe;QAAQ;kBACnF;;;;;;AAGP;AAGO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sreo4K/Desktop/mid-app-dev/frontend/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Poppins } from \"next/font/google\";\nimport \"./globals.css\";\nimport { CartProvider } from \"@/contexts/CartContext\"; // Import the CartProvider\n\n// Load Google Fonts\nconst poppins = Poppins({\n  variable: \"--font-poppins\",\n  weight: [\"400\", \"500\", \"600\", \"700\"],\n  subsets: [\"latin\"],\n});\n\n// Page Metadata\nexport const metadata: Metadata = {\n  title: \"Grocery Store\",\n  description: \"Built by <samandareo/>\",\n};\n\n// Root Layout\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body className={`${poppins.variable} font-sans antialiased`}>\n        {/* Wrap the app with the CartProvider */}\n        <CartProvider>{children}</CartProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAGA,6NAAuD,0BAA0B;;;;;AAU1E,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAGe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YAAK,WAAW,GAAG,2IAAA,CAAA,UAAO,CAAC,QAAQ,CAAC,sBAAsB,CAAC;sBAE1D,cAAA,8OAAC,+HAAA,CAAA,eAAY;0BAAE;;;;;;;;;;;;;;;;AAIvB"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sreo4K/Desktop/mid-app-dev/frontend/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}